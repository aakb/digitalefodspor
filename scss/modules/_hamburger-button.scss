$button-width: $nav-height;            // The width of the button area
$button-height: $nav-height;           // The height of the button area
$bar-thickness: 5px;                   // The thickness of the button bars
$button-pad: 22px;                     // The left/right padding between button area and bars.
$button-bar-space: 8px;                // The spacing between button bars
$button-transition-duration: 0.3s;     // The transition duration
$button-transition-delay: 0s;
/**
 * Toggle Switch Global0
 *
 * All switches should take on the class `c-hamburger` as well as their
 * variant that will give them unique properties. This class is an overview
 * class that acts as a reset for all versions of the icon.
 */

.c-hamburger {
  position: relative;
  overflow: hidden;

  display: block;
  margin: 0;
  padding: 0;
  width: $button-width;
  height: $button-height;

  background-color: transparentize(#fff, .85);
  border: none;
  cursor: pointer;
  box-shadow: none;
  font-size: 0;
  text-indent: 100%;

  transition: background $button-transition-duration;

  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;

  &:hover {
    background-color: $menu-color;
  }
}

.c-hamburger:focus {
  outline: none;
}

.c-hamburger span {
  display: block;
  position: absolute;
  top: ($button-height / 2) - ($bar-thickness / 2);
  left: $button-pad;
  right: $button-pad;
  height: $bar-thickness;
  background: rgb(255,255,255);
}

.c-hamburger span::before,
.c-hamburger span::after {
  position: absolute;
  display: block;
  left: 0;
  width: 100%;
  height: $bar-thickness;
  background-color: #fff;
  content: "";
}

.c-hamburger span::before {
  top: -$bar-thickness - $button-bar-space;
}

.c-hamburger span::after {
  bottom: -$bar-thickness - $button-bar-space;
}

/**
 * Style 2
 *
 * Hamburger to "x" (htx). Takes on a hamburger shape, bars slide
 * down to center and transform into an "x".
 */

.c-hamburger--htx {
  background-color: $menu-color;
}

.c-hamburger--htx span {
  transition: background 0s, $button-transition-duration;
}

.c-hamburger--htx span::before,
.c-hamburger--htx span::after {

  transition-duration: $button-transition-duration, $button-transition-duration;
  transition-delay: $button-transition-duration, 0s;
}

.c-hamburger--htx span::before {
  transition-property: top, transform;
}

.c-hamburger--htx span::after {
  transition-property: bottom, transform;
}

/* active state, i.e. menu open */

.c-hamburger--htx.is-active {
  background-color: $menu-color;
}

.c-hamburger--htx.is-active span {
  transition-delay: $button-transition-delay;
  background: none;
}

.c-hamburger--htx.is-active span::before {
  top: 0;
  transition-delay: $button-transition-delay;
  transform: rotate(45deg);
}

.c-hamburger--htx.is-active span::after {
  bottom: 0;
  transition-delay: $button-transition-delay;
  transform: rotate(-45deg);
}

.c-hamburger--htx.is-active span::before,
.c-hamburger--htx.is-active span::after {
  transition-delay: $button-transition-delay
  , $button-transition-delay;
}
